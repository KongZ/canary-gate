name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  REGISTRY_IMAGE: ghcr.io/kongz/canary-gate
  REGISTRY_CHART: ghcr.io/kongz/helm-charts

jobs:
  release-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build canary-gate server and push
        id: docker_canary-gate
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT_HASH=${{ github.sha }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
          load: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-chart:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.0

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          install_only: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Pack Charts
        run: |
          rm -rf .cr-release-packages
          mkdir -p .cr-release-packages
          cr package charts/canary-gate --package-path .cr-release-packages
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: GHCR login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR
        run: |
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://${{ env.REGISTRY_CHART }}
          done
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  build-cli:
    runs-on: ubuntu-latest
    strategy:
      # The matrix defines the different platforms to build for
      matrix:
        include:
          - goos: linux
            goarch: amd64
            binary_name: linux/amd64/canary-gate
            archive_name: canary-gate-${{ github.ref_name }}-linux-amd64.tar.gz
          - goos: windows
            goarch: amd64
            binary_name: windows/amd64/canary-gate.exe
            archive_name: canary-gate-${{ github.ref_name }}-windows-amd64.zip
          - goos: darwin
            goarch: amd64
            binary_name: darwin/amd64/canary-gate
            archive_name: canary-gate-${{ github.ref_name }}-darwin-amd64.tar.gz
          - goos: darwin
            goarch: arm64
            binary_name: darwin/arm64/canary-gate
            archive_name: canary-gate-${{ github.ref_name }}-darwin-arm64.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x

      - name: Build Go binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p release-builds
          go build -v -o release-builds/${{ matrix.binary_name }} ./cli/main.go

      - name: Compress binary
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            # For Windows, create a .zip file
            cd release-builds
            zip ../${{ matrix.archive_name }} ${{ matrix.binary_name }}
          else
            # For Linux and macOS, create a .tar.gz file
            tar -czvf ${{ matrix.archive_name }} -C release-builds ${{ matrix.binary_name }}
          fi

      - name: Upload compressed artifact
        # Upload the compressed archive, not the raw binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.archive_name }}

  release-cli:
    runs-on: ubuntu-latest
    needs: build-cli
    permissions:
      contents: write
    steps:
      - name: Download all build cli artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets/

      - name: Upload assets to release ðŸš€
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release-assets/**/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true